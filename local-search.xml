<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数字跳动</title>
    <link href="/2023/07/28/%E6%95%B0%E5%AD%97%E8%B7%B3%E5%8A%A8/"/>
    <url>/2023/07/28/%E6%95%B0%E5%AD%97%E8%B7%B3%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="效果">效果</h2><p>先上效果</p><p><jumpNum duration="5000">-123456</jumpNum></p><p><jumpNum duration="4000">-123456.789</jumpNum></p><p>尝试将鼠标移动至下方数字处</p><p><jumpNum duration="4000" type="hover">789.654321</jumpNum></p><h2 id="特点">特点</h2><ol><li>支持自定义数字跳动的持续时间</li><li>支持鼠标浮动到数字上显示或直接显示两种方式</li><li>根据数字大小可自动调整整数位与小数位的跳动时间</li></ol><h2 id="使用方式">使用方式</h2><h3 id="安装">安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/chafiprc/jumpNum.git<br></code></pre></td></tr></table></figure><p>将 src 中的 jumpNum.js 复制到 hexo 博客 source/js 目录下</p><p>在博客根目录下新建 scripts 目录，在其中新建一个 injector.js 文件<br>写入以下内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<br>  <span class="hljs-string">&quot;body_end&quot;</span>,<br>  <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">js</span>(<span class="hljs-string">&quot;/js/jumpNum.js&quot;</span>);<br>  &#125;,<br>  <span class="hljs-string">&quot;post&quot;</span><br>);<br></code></pre></td></tr></table></figure><p>此处利用了 hexo5 自带的 js 插入功能，详细参数请见<a href="https://hexo.io/zh-cn/api/injector"><br>注入器（Injector）<br></a></p><h3 id="使用">使用</h3><p>在博客中引入<code>&lt;jumpNum&gt;Num&lt;/jumpNum&gt;</code>标签即可，其中 Num 为你需要跳动的数字</p><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td><code>default</code></td><td>用于选择数字显示的方式，<code>default</code>:页面加载完毕数字即开始跳动，<code>hover</code>:鼠标移动到数字上方时可以跳动</td></tr><tr><td>duration</td><td><code>2000</code></td><td>用于调整数字跳动的时间，范围在 500-5000 之间，单位 ms</td></tr></tbody></table><p>例如<br>第一处 -123456 的代码即为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">jumpNum</span> <span class="hljs-attr">duration</span>=<span class="hljs-string">&quot;5000&quot;</span>&gt;</span>-123456<span class="hljs-tag">&lt;/<span class="hljs-name">jumpNum</span>&gt;</span><br></code></pre></td></tr></table></figure><p>第二处 -123456.789 的代码即为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">jumpNum</span> <span class="hljs-attr">duration</span>=<span class="hljs-string">&quot;4000&quot;</span>&gt;</span>-123456.789<span class="hljs-tag">&lt;/<span class="hljs-name">jumpNum</span>&gt;</span><br></code></pre></td></tr></table></figure><p>第三处 789.654321 的代码即为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">jumpNum</span> <span class="hljs-attr">duration</span>=<span class="hljs-string">&quot;4000&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hover&quot;</span>&gt;</span>789.654321<span class="hljs-tag">&lt;/<span class="hljs-name">jumpNum</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="已知问题">已知问题</h2><ol><li>由于使用位运算，数字不能太大，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>31</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-2^{31},2^{31}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>之间</li></ol>]]></content>
    
    
    <categories>
      
      <category>前端学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Github搭建个人博客</title>
    <link href="/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="Hexo">Hexo</h3><ul><li>Hexo 是一个快速,简洁且高效的博客框架。Hexo 使用 markdown (或其他渲染引擎)解析文章,在几秒内,即可利用靓丽的主题生成静态网页，并托管在 github 上</li></ul><h3 id="Github">Github</h3><ul><li>是一个代码托管网站，提供<a href="https://pages.github.com">个人页面</a>的支持</li></ul><h3 id="一-下载相关软件">一.下载相关软件</h3><ul><li>Hexo 基于 js，需要 js 运行环境，此处安装<a href="https://nodejs.org">Nodejs</a>，一路默认安装即可</li><li>由于需要托管到 github，需要下载安装<a href="https://git-scm.com/">git</a>，一路默认安装即可</li></ul><h3 id="二-配置-git">二.配置 git</h3><ol><li><p>打开 git bash</p></li><li><p>修改用户名以及个人邮箱</p><p><code>git config --global user.name &quot;chafi&quot; #名称</code><br><code>git config --global user.email &quot;1538153895@qq.com&quot; #邮箱</code></p></li><li><p>生成 ssh 密匙</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入本地.ssh目录</span><br><span class="hljs-comment"># 打开bash</span><br>ssh-keygen -t rsa <span class="hljs-comment"># rsa是加密方法</span><br></code></pre></td></tr></table></figure><p>（可以在当前目录操作即可）</p><ol start="4"><li>复制.ssh 文件下的 id_rsa.pub 内容</li><li>打开 github，在 setting 中添加 ssh 密钥<img src="/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A21.png" class="" title="音频图像"><img src="/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22.png" class="" title="音频图像"></li><li>打开 git bash，输入<code>ssh -T git@github.com</code>，第一次输入可能需要确认连接，输入 yes 即可，若出现以下文字，则 ssh 配置成功<img src="/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A23.png" class="" title="音频图像"></li></ol><h3 id="三-添加-Github-存储库">三.添加 Github 存储库</h3><ul><li>打开 github 页面<img src="/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A25.png" class="" title="音频图像"></li><li>新建库</li><li>接着在库名中写<strong><a href="http://xn--6qqv7i7thbp4a.github.io">你的名字.github.io</a></strong>（不可修改），创建库<img src="/2023/07/16/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A26.png" class="" title="音频图像"></li></ul><h3 id="四-下载-Hexo，并初始化">四.下载 Hexo，并初始化</h3><ol><li>打开 cmd</li></ol><ul><li>(按需修改 npm 的安装位置和缓存位置)<br><code>npm config set prefix &quot;node_global路径&quot;</code><br><code>npm config set cache &quot;node_cach路径&quot;</code><br>设置完之后，记得把 node_global 路径加入 path 环境变量<br>若提示不存在 npm，则需要把 npm 路径加入环境变量</li></ul><ol start="2"><li>安装 Hexo<br><code>npm install -g hexo-cli</code></li><li>新建一个用于储存博客的文件夹，比如 D:\Blog</li><li>接着进入文件夹，输入<code>hexo init</code></li><li><code>hexo s/server</code>来开启本地服务，来验证 hexo 是否正常运行</li></ol><h3 id="五-关联-Github-和-Hexo">五.关联 Github 和 Hexo</h3><p>这一步，我们就可以将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开站点配置文件_config.yml，翻到最后，修改为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:YourgithubName/YourgithubName.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>YourgithubName 就是你的 GitHub 账户</p><p>这个时候需要先安装 deploy-git ，也就是部署的命令,这样你才能用命令部署到 GitHub。</p><p><code>npm install hexo-deployer-git --save</code></p><p>然后</p><p><code>hexo clean</code></p><p><code>hexo generate</code></p><p><code>hexo deploy</code></p><p><code>hexo start</code></p><p>其中</p><p>hexo clean 清除了你之前生成的东西，也可以不加。</p><p>hexo generate 顾名思义，生成静态文章，可以用 hexo g 缩写</p><p>hexo deploy 部署文章，可以用 hexo d 缩写</p><p>hexo start 预览页面，可以用 hexo s 缩写</p><p>接下来你便可以在<strong><a href="https://xn--6qqv7i7thbp4a.github.io">https://你的名字.github.io</a></strong>访问你的页面了！</p>]]></content>
    
    
    <categories>
      
      <category>前端学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人博客</tag>
      
      <tag>Hexo</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式</title>
    <link href="/2023/06/28/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2023/06/28/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="入门">入门</h3><ul><li>两个网站</li><li><a href="https://regexr-cn.com">在线测试工具</a></li><li><a href="https://codejiaonang.com">正则练习</a></li></ul><h3 id="限定符">限定符</h3><ul><li><strong>?</strong><br><code>/used?</code>代表 d 可以出现 1 次或者 0 次</li><li><strong>*</strong><br><code>/ab*c</code>代表 b 可以出现 0 次或者很多次，匹配时 a,c 中间不能有其它字符</li><li><strong>+</strong><br><code>/ab+c</code>代表 b 可以出现 1 次或者很多次</li><li><strong>{}</strong><br><code>/ab&#123;6&#125;c</code>代表 b 出现 6 次<br><code>/ab&#123;2,6&#125;c</code>代表 b 出现 2 到 6 次<br><code>/ab&#123;2,&#125;c</code>代表 b 出现 2 次以上<br>可以利用 <strong>()</strong> 把多个字符扩在一起，看作一个整体</li></ul><h3 id="或">或</h3><ul><li><strong>|</strong><br><code>/a (cat|dog)</code>cat 与 dog 二选一</li></ul><h3 id="字符类">字符类</h3><ul><li><strong>[]</strong><br><code>/[abc]+</code>代表匹配的字符只能取自 abc<br><code>/[a-z]+</code>代表匹配所有的小写字母<br><code>/[a-zA-Z]+</code>代表匹配所有的字母<br><code>/[a-zA-Z0-9]+</code>代表匹配所有的字母和数字</li><li><strong>^</strong> 脱字符<br><code>/[^0-9]+</code>代表匹配所有的非数字字符</li></ul><h3 id="元字符">元字符</h3><ul><li>\d 数字字符 等价于 [0-9]</li><li>\w 单词字符 代表所有的英文字符，数字加上下划线</li><li>\s 空白符 代表 tab 和换行符</li><li>\D 非数字字符</li><li>\W 非单词字符</li><li>\S 非空白字符</li><li><strong>.</strong> 代表任意字符，不包括换行符</li><li>^a 只会代表行首的 a，a$只会代表行尾的 a</li><li>\b 代表单词边界</li><li>若需表达特定的字符，比如 <strong>.</strong> ，可以在前面加上转义符号\</li></ul><h3 id="贪婪匹配与懒惰匹配">贪婪匹配与懒惰匹配</h3><ul><li>贪婪匹配<img src="/2023/06/28/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F1.png" class="" title="音频图像"></li><li>懒惰匹配<img src="/2023/06/28/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F2.png" class="" title="音频图像">在限定符后加入一个？，就可以使匹配内的内容尽可能少</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法学习</tag>
      
      <tag>正则表达式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电路理论mooc学习参考答案</title>
    <link href="/2023/06/07/%E7%94%B5%E8%B7%AF%E7%90%86%E8%AE%BAmooc%E5%AD%A6%E4%B9%A0%E5%8F%82%E8%80%83%E7%AD%94%E6%A1%88/"/>
    <url>/2023/06/07/%E7%94%B5%E8%B7%AF%E7%90%86%E8%AE%BAmooc%E5%AD%A6%E4%B9%A0%E5%8F%82%E8%80%83%E7%AD%94%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>又是一年期末周，mooc 是不是又没写完？在此隆重提供华中科技大学 2023 年的电路理论 mooc 部分题目答案。</p><h2 id="下载">下载</h2><p>点击标题即可下载<a href="%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6MOOC%E3%80%8A%E7%94%B5%E8%B7%AF%E7%90%86%E8%AE%BA(%E5%8D%8E%E4%B8%AD%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6)%E3%80%8B%E6%9C%80%E6%96%B0%E7%AB%A0%E8%8A%82%E6%B5%8B%E8%AF%95%E7%AD%94%E6%A1%88.pdf">2023 华中科技大学电路理论 mooc 测试答案</a></p><p>此答案仅供学习参考，还是希望大家好好完成慕课的</p><p>请大家不要随意传播与扩散，更不要用作商业用途!!!</p>]]></content>
    
    
    <categories>
      
      <category>大学课程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电路理论</tag>
      
      <tag>mooc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二进制基础</title>
    <link href="/2023/06/06/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%9F%BA%E7%A1%80/"/>
    <url>/2023/06/06/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="基础">基础</h2><p>原码：首位表示符号，其余表示数值<br>反码：正数的反码是本身；负数的反码除符号位之外，其余各位取反<br>补码：正数的补码就是其本身；负数的补码是在其反码的基础上加 1<br>有符号数的加减法需要把数转化为补码进行运算，运算结果仍未补码，若要得到原数，需对所得补码的结果再求一次补码</p><ul><li>比如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>6</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>s</mi><mi>d</mi><mn>30000</mn><mo>+</mo><mn>1</mn><msup><mn>6</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>s</mi><mi>d</mi><mn>20000</mn><mo>=</mo><mn>1</mn><msup><mn>6</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>s</mi><mi>b</mi><mn>1100</mn><mi mathvariant="normal">_</mi><mn>0011</mn><mi mathvariant="normal">_</mi><mn>0101</mn><mi mathvariant="normal">_</mi><mn>0000</mn><mo stretchy="false">(</mo><mtext>这是补码</mtext><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><msup><mn>6</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>1011</mn><mi mathvariant="normal">_</mi><mn>1100</mn><mi mathvariant="normal">_</mi><mn>1011</mn><mi mathvariant="normal">_</mi><mn>0000</mn><mo stretchy="false">(</mo><mtext>源码</mtext><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn><msup><mn>6</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>s</mi><mi>d</mi><mn>15536</mn></mrow><annotation encoding="application/x-tex">16&#x27;sd30000 + 16&#x27;sd20000 = 16&#x27;sb1100\_0011\_0101\_0000(这是补码)=16&#x27;1011\_1100\_1011\_0000(源码)=-16&#x27;sd15536</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8352em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">s</span><span class="mord mathnormal">d</span><span class="mord">30000</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord">1</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">s</span><span class="mord mathnormal">d</span><span class="mord">20000</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0619em;vertical-align:-0.31em;"></span><span class="mord">1</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">s</span><span class="mord mathnormal">b</span><span class="mord">1100_0011_0101_0000</span><span class="mopen">(</span><span class="mord cjk_fallback">这是补码</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0619em;vertical-align:-0.31em;"></span><span class="mord">1</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">1011_1100_1011_0000</span><span class="mopen">(</span><span class="mord cjk_fallback">源码</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8352em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">s</span><span class="mord mathnormal">d</span><span class="mord">15536</span></span></span></span></li></ul><img src="/2023/06/06/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%9F%BA%E7%A1%80/binary1.png" class="" title="二进制基础"><h2 id="转化">转化</h2><h4 id="无符号数转有符号数-：">无符号数转有符号数 ：</h4><ol><li>无符号数最高位如果是 0，有符号数就是等于无符号数本身 (正数取补码是自身)</li><li>无符号数最高位如果是 1，将无符号数取补码得到的就是有符号数<ul><li>假设两个最高位是 0 的无符号数相加得到了一个最高位是 1 的有符号数，根据有符号数的运算规则，两个数的补码相加得到的仍为补码，因此要求相对的有符号数的原码，就要取补码得到原码</li></ul></li></ol><h4 id="有符号数转无符号数：">有符号数转无符号数：</h4><ol><li>有符号数最高位如果是 0，无符号数就是等于有符号数本身 (正数取补码是自身)</li><li>有符号数最高位如果是 1，将无符号数取补码得到的就是有符号数<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">[</mo><mi>x</mi><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><msub><mo stretchy="false">]</mo><mtext>补</mtext></msub><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">[[x]_补]_补=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[[</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">补</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，因此无符号数通过取补码变成有符号数，有符号数再取补码变成无符号数</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二进制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ADPCM算法</title>
    <link href="/2023/05/26/ADPCM%E7%AE%97%E6%B3%95/"/>
    <url>/2023/05/26/ADPCM%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="简介">简介</h2><p>ADPCM(Adaptive Differential Pulse Code Modulation, 自适应差分脉冲编码调制) 是一种音频信号数字化编码技术, 音频压缩标准 G.722, G.723, G.726 中都会使用到 ADPCM</p><h2 id="预备知识">预备知识</h2><h3 id="PCM-脉冲编码调制-Pulse-Code-Modulation">PCM-脉冲编码调制-Pulse Code Modulation</h3><img src="/2023/05/26/ADPCM%E7%AE%97%E6%B3%95/adpcm1.png" class="" title="音频图像"><p>音频输入为 16bit 的有符号整数</p><p>假设输入样本分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mn>12</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_{i}(1\leq i\leq 12)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">12</span><span class="mclose">)</span></span></span></span></p><ul><li>1024,1000,980,970,970,980,1000,1010,1024,1030,1020,1010</li></ul><p>那么存储时需要开辟 12*16bit = 192bit，需要大量的空间<br>为了减少存储开销，Differential Pulse Code Modulation, 差分脉冲编码调制被提出</p><h3 id="DPCM-差分脉冲编码调制-Differential-Pulse-Code-Modulation">DPCM-差分脉冲编码调制-Differential Pulse Code Modulation</h3><p>利用声波的连续性，一般来说，相邻采样值的差值较小，可以用较小的位数来存储<br>可将![[ADPCM算法#^c764ad]]进行差分运算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub><mo>−</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>s</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_{i}=s_{i}-s_{i-1}(s_{0}=0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，上述可编码为</p><ul><li>1024,-24,-20,-10,0,10,20,10,14,6,-10,-10</li></ul><p>若求原来的采样值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，只需<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi mathvariant="normal">Σ</mi><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_{i}=\Sigma{d_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord">Σ</span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>（需要注意的是，DPCM 编码是无损的，也就是可以复原成原来的采样值）<br>大部分情况下，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>只需要 4bit 来表示，但是存在一些情况，比如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">s_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>无法用 4bit 的数值表示，于是 ADPCM 被提出</p><h2 id="正课">正课</h2><p>ADPCM-自适应差分脉冲编码调制-Adaptive Differential Pulse Code Modulation</p><p>（本文以 IMA-ADPCM 算法实现进行说明）</p><h3 id="主要思想">主要思想</h3><ul><li>利用量化差分值(diffq)取代原有差分值(diff)进行差分运算</li></ul><p>何为量化差分值？</p><h3 id="量化差分值">量化差分值</h3><p>由 DPCM 可以看出，差分值具有很大的范围，可以取遍<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><msup><mn>2</mn><mn>15</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>15</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-2^{15},2^{15}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>范围内的任何一个整数，无法用 4bit 的值来表示<br>而 ADPCM 的量化差分值是用 4bit 的 ADPCM 代码<strong>code</strong>与一个可变的步长<strong>step</strong>来表示，<strong>假定 step 可在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><msup><mn>2</mn><mn>15</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,2^{15}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>中取若干个数，构成一个 StepTable</strong></p><p>现不加说明的给定 code(4bit)各位<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder accentunder="true"><mi>a</mi><mo stretchy="true">‾</mo></munder><munder accentunder="true"><mi>b</mi><mo stretchy="true">‾</mo></munder><munder accentunder="true"><mi>c</mi><mo stretchy="true">‾</mo></munder><munder accentunder="true"><mi>d</mi><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{a}\underline{b}\underline{c}\underline{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8944em;vertical-align:-0.2em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span>的含义</p><ul><li>a 代表符号，也就是正负</li><li>b 是 1 时，代表 1 倍的 step 步长值</li><li>c 是 1 时，代表 0.5 倍的 step 步长值</li><li>d 是 1 时，代表 0.25 倍的 step 步长值</li></ul><p>举个例子：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mn>7</mn><msub><mo stretchy="false">)</mo><mn>10</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>0111</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">code=(7)_{10}=(0111)_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0111</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，代表 code 是正数，对应<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.5</mn><mo>×</mo><mn>1</mn><mo>+</mo><mn>0.25</mn><mo>×</mo><mn>1</mn><mo>=</mo><mn>1.75</mn><mtext>倍</mtext></mrow><annotation encoding="application/x-tex">1\times1+0.5\times1+0.25\times1=1.75倍</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.25</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1.75</span><span class="mord cjk_fallback">倍</span></span></span></span>的步长值</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><msub><mo stretchy="false">)</mo><mn>10</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1001</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">code=(5)_{10}=(1001)_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1001</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，代表 code 是负数，对应<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>0</mn><mo>+</mo><mn>0.5</mn><mo>×</mo><mn>0</mn><mo>+</mo><mn>0.25</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>0.25</mn><mtext>倍</mtext></mrow><annotation encoding="application/x-tex">-(1\times0+0.5\times0+0.25\times1)=-0.25倍</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.25</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">0.25</span><span class="mord cjk_fallback">倍</span></span></span></span>的步长值</p><p>而量化差分值的计算方法是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mi>q</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mtext>对应步长值的倍数</mtext><mo>×</mo><mtext>当前的</mtext><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mtext>步长值</mtext><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>8</mn><mtext>的步长值</mtext></mrow><annotation encoding="application/x-tex">diffq=code对应步长值的倍数\times当前的step步长值+1/8的步长值</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">对应步长值的倍数</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">当前的</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">步长值</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/8</span><span class="mord cjk_fallback">的步长值</span></span></span></span></p><p>（注：1/8 的步长值是 IMA ADPCM 算法规定的，不同实现算法这部分不同）</p><p>这么计算之后，diffq 也可以取遍<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><msup><mn>2</mn><mn>15</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>15</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-2^{15},2^{15}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>的很大一部分数值，同时 diffq 只需要 4bit 的值与一个 step 值便可以计算出来，与 diff 的 16bit 相比，减小了很大的存储空间</p><p>现在回顾主要思想</p><blockquote><p>利用量化差分值(diffq)取代原有差分值(diff)进行差分运算</p></blockquote><p>既然要取代，我们就应该尽可能在当前的 step 下，尽可能的让 diffq 接近 diff 值<br>如何实现呢？</p><h3 id="让-diffq-接近-diff">让 diffq 接近 diff</h3><p>首先，diffq 应该要与 diff 有相同的符号，也就是说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mo>&lt;</mo><mn>0</mn><mtext>时，</mtext><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mi>q</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">diff&lt;0时，diffq&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mord cjk_fallback">时，</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>,那么 code 的第一位(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>)应该是 0，否则是 1</p><p>在当前 step 下，如果 diff 值大于一倍步长，那么为了让 diffq 尽可能靠近 diff，那么 diffq 值也应该大于一倍步长，根据 diffq 的计算方式，那么 code 的第二位(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>)应该是 1，否则 code 的第二位是 0</p><p>接下来将 diff 减去当前 step 值，如果这时候 diff 大于 0.5 倍步长，那么同理 code 的第三位(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>)应该是 1，否则是 0</p><p>接下来将 diff 减去 0.5 倍 step 值，如果这时候 diff 大于 0.25 倍步长，那么同理 code 的第四位(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>)应该是 1，否则是 0</p><p>这样，我们就得到了在当前 step 下最接近 diff 值的 diffq 的值，同时求出了 code 值</p><p>一个问题：</p><p>这样计算出来的 diffq 的绝对值的范围大致在 2 倍 step 范围内，假如此时的 diff 的绝对值远大于 step 值，要怎么办？</p><p>这就对每次选取的 step 值有着一定的要求</p><h3 id="step-步长的选定">step 步长的选定</h3><p>我们可以进行大胆的假定，假如这次的 diff 值远大于步长值，那么下一个采样值的 diff 值应该也是远大于这次的步长值，那么为了减小误差，我们就应该让下一次的步长值扩大 ^ce108a</p><p>我们定义一个 index 值，用于选取 step 值</p><p>其中 index 与 code 与 step 的关系应该满足：</p><ul><li>当 index 变大的时候，step 对应变大；index 变小的时候，step 对应变小</li><li>当 code 大于 4 或者小于-4 的时候，也就是 diff 的绝对值大于 1 倍步长的时候，index 应该变大，这样可以使 step 变大</li></ul><p>总结一下，index 受到 code 的影响，而 step 受到 index 的影响</p><p>我们观察 IMA-ADPCM 给定的 index 和 step 表(<strong>注意 IMA-ADPCM 中 index 是 8bit 整数</strong>)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/* Table of index changes */</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> IndexTable[<span class="hljs-number">16</span>] = &#123;<br>    <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>,<br>    <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>&#125;;<br><span class="hljs-comment">/* Quantizer step size lookup table */</span><br><span class="hljs-type">const</span> <span class="hljs-type">long</span> StepTable[<span class="hljs-number">89</span>] = &#123;<br>    <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>,<br>    <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">23</span>, <span class="hljs-number">25</span>, <span class="hljs-number">28</span>, <span class="hljs-number">31</span>, <span class="hljs-number">34</span>, <span class="hljs-number">37</span>, <span class="hljs-number">41</span>, <span class="hljs-number">45</span>,<br>    <span class="hljs-number">50</span>, <span class="hljs-number">55</span>, <span class="hljs-number">60</span>, <span class="hljs-number">66</span>, <span class="hljs-number">73</span>, <span class="hljs-number">80</span>, <span class="hljs-number">88</span>, <span class="hljs-number">97</span>, <span class="hljs-number">107</span>, <span class="hljs-number">118</span>,<br>    <span class="hljs-number">130</span>, <span class="hljs-number">143</span>, <span class="hljs-number">157</span>, <span class="hljs-number">173</span>, <span class="hljs-number">190</span>, <span class="hljs-number">209</span>, <span class="hljs-number">230</span>, <span class="hljs-number">253</span>, <span class="hljs-number">279</span>, <span class="hljs-number">307</span>,<br>    <span class="hljs-number">337</span>, <span class="hljs-number">371</span>, <span class="hljs-number">408</span>, <span class="hljs-number">449</span>, <span class="hljs-number">494</span>, <span class="hljs-number">544</span>, <span class="hljs-number">598</span>, <span class="hljs-number">658</span>, <span class="hljs-number">724</span>, <span class="hljs-number">796</span>,<br>    <span class="hljs-number">876</span>, <span class="hljs-number">963</span>, <span class="hljs-number">1060</span>, <span class="hljs-number">1166</span>, <span class="hljs-number">1282</span>, <span class="hljs-number">1411</span>, <span class="hljs-number">1552</span>, <span class="hljs-number">1707</span>, <span class="hljs-number">1878</span>, <span class="hljs-number">2066</span>,<br>    <span class="hljs-number">2272</span>, <span class="hljs-number">2499</span>, <span class="hljs-number">2749</span>, <span class="hljs-number">3024</span>, <span class="hljs-number">3327</span>, <span class="hljs-number">3660</span>, <span class="hljs-number">4026</span>, <span class="hljs-number">4428</span>, <span class="hljs-number">4871</span>, <span class="hljs-number">5358</span>,<br>    <span class="hljs-number">5894</span>, <span class="hljs-number">6484</span>, <span class="hljs-number">7132</span>, <span class="hljs-number">7845</span>, <span class="hljs-number">8630</span>, <span class="hljs-number">9493</span>, <span class="hljs-number">10442</span>, <span class="hljs-number">11487</span>, <span class="hljs-number">12635</span>, <span class="hljs-number">13899</span>,<br>    <span class="hljs-number">15289</span>, <span class="hljs-number">16818</span>, <span class="hljs-number">18500</span>, <span class="hljs-number">20350</span>, <span class="hljs-number">22385</span>, <span class="hljs-number">24623</span>, <span class="hljs-number">27086</span>, <span class="hljs-number">29794</span>, <span class="hljs-number">32767</span>&#125;;<br></code></pre></td></tr></table></figure><p>step 表随着下标的增加而增加<br>index 表在 code 为 0~3 与-3~0 的时候为 0xff，其余为 2，4，6，8</p><p>我们令</p><p><code>index = index + IndexTable[code]</code></p><p><code>step = StepTable[index]</code></p><p>code 为 0~3 与-3~0 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo>=</mo><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo>+</mo><mn>0</mn><mi>x</mi><mi>f</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">index=index+0xff</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">in</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">in</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span></span></span></span>,由于 index 是 8bit 数据，必然会溢出，溢出之后得到的数据相当于 index-1，此时对应的 step 值变小</p><p>code 大于 4 或者小于-4 时，index 加上了一个大于 0 的数，使 index 变大，此时对应的 step 值变大，符合要求</p><p>注意，这些 step 与 index 是在当前采样值下计算的，是在下一次的采样值下使用的</p><p>现在 step 也解决了，也编码完了，如何解码呢</p><h3 id="解码">解码</h3><p>同 DPCM 原理一样，通过计算量化差分值的和，得到解码数据<br>不过，此时得到的数据与原数据是有差异的，故而 ADPCM 是有损压缩</p><h3 id="代码实现">代码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">/* Table of index changes */</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> IndexTable[<span class="hljs-number">16</span>] = &#123;<br>    <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>,<br>    <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>&#125;;<br><span class="hljs-comment">/* Quantizer step size lookup table */</span><br><span class="hljs-type">const</span> <span class="hljs-type">long</span> StepSizeTable[<span class="hljs-number">89</span>] = &#123;<br>    <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>,<br>    <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">23</span>, <span class="hljs-number">25</span>, <span class="hljs-number">28</span>, <span class="hljs-number">31</span>, <span class="hljs-number">34</span>, <span class="hljs-number">37</span>, <span class="hljs-number">41</span>, <span class="hljs-number">45</span>,<br>    <span class="hljs-number">50</span>, <span class="hljs-number">55</span>, <span class="hljs-number">60</span>, <span class="hljs-number">66</span>, <span class="hljs-number">73</span>, <span class="hljs-number">80</span>, <span class="hljs-number">88</span>, <span class="hljs-number">97</span>, <span class="hljs-number">107</span>, <span class="hljs-number">118</span>,<br>    <span class="hljs-number">130</span>, <span class="hljs-number">143</span>, <span class="hljs-number">157</span>, <span class="hljs-number">173</span>, <span class="hljs-number">190</span>, <span class="hljs-number">209</span>, <span class="hljs-number">230</span>, <span class="hljs-number">253</span>, <span class="hljs-number">279</span>, <span class="hljs-number">307</span>,<br>    <span class="hljs-number">337</span>, <span class="hljs-number">371</span>, <span class="hljs-number">408</span>, <span class="hljs-number">449</span>, <span class="hljs-number">494</span>, <span class="hljs-number">544</span>, <span class="hljs-number">598</span>, <span class="hljs-number">658</span>, <span class="hljs-number">724</span>, <span class="hljs-number">796</span>,<br>    <span class="hljs-number">876</span>, <span class="hljs-number">963</span>, <span class="hljs-number">1060</span>, <span class="hljs-number">1166</span>, <span class="hljs-number">1282</span>, <span class="hljs-number">1411</span>, <span class="hljs-number">1552</span>, <span class="hljs-number">1707</span>, <span class="hljs-number">1878</span>, <span class="hljs-number">2066</span>,<br>    <span class="hljs-number">2272</span>, <span class="hljs-number">2499</span>, <span class="hljs-number">2749</span>, <span class="hljs-number">3024</span>, <span class="hljs-number">3327</span>, <span class="hljs-number">3660</span>, <span class="hljs-number">4026</span>, <span class="hljs-number">4428</span>, <span class="hljs-number">4871</span>, <span class="hljs-number">5358</span>,<br>    <span class="hljs-number">5894</span>, <span class="hljs-number">6484</span>, <span class="hljs-number">7132</span>, <span class="hljs-number">7845</span>, <span class="hljs-number">8630</span>, <span class="hljs-number">9493</span>, <span class="hljs-number">10442</span>, <span class="hljs-number">11487</span>, <span class="hljs-number">12635</span>, <span class="hljs-number">13899</span>,<br>    <span class="hljs-number">15289</span>, <span class="hljs-number">16818</span>, <span class="hljs-number">18500</span>, <span class="hljs-number">20350</span>, <span class="hljs-number">22385</span>, <span class="hljs-number">24623</span>, <span class="hljs-number">27086</span>, <span class="hljs-number">29794</span>, <span class="hljs-number">32767</span>&#125;;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">ADPCM_Data</span><br>&#123;<br>    <span class="hljs-type">int</span> index;<br>    <span class="hljs-type">int</span> sample;<br>&#125;;<br><br>ADPCM_Data prevSample = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>&#125;; <span class="hljs-comment">// 前一个数据，初始均为0，0，通过前一个数据计算的index值与采样值，来计算当前采样值的step值</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">code代表着量化差分值是几倍的步长，</span><br><span class="hljs-comment">0000-1111</span><br><span class="hljs-comment">4位</span><br><span class="hljs-comment">从左到右，第一位是符号位，代表量化差分值的正负</span><br><span class="hljs-comment">第二位是数值位，代表量化差分值的绝对值是步长的1倍或者0倍</span><br><span class="hljs-comment">第三位是数值位，代表量化差分值的绝对值是1/2步长的1倍或者0倍</span><br><span class="hljs-comment">第四位是数值位，代表量化差分值的绝对值是1/4步长的1倍或者0倍</span><br><span class="hljs-comment">量化差分值默认有step的1/8（具体原因我也不知道...也许是1/4step的0与1的统计平均值，所以取1/8step）</span><br><span class="hljs-comment">也就是diffq（也就是量化差分值）只能是step的+-(0,0.25,0.5,0.75,1,1.25,1.5,1.75)+0.125的倍数</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">diff差分值与diffq量化差分值的关系</span><br><span class="hljs-comment">diffq在精度允许情况下，可以看作diff（压缩损失由来）</span><br><span class="hljs-comment">diffq只能是step的某个倍数，而diff则可以随意取</span><br><span class="hljs-comment">diffq则是在step的倍数中的一个尽可能接近diff的一个数</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">若code大于4或者小于-4时，说明差分值大于1倍的步长，我们可以预测下一次的差分也是大概率大于1倍步长，</span><br><span class="hljs-comment">因此我们应该变大步长值，在index = IndexTable[code]可以看出</span><br><span class="hljs-comment">1. code在0-3（对应差分值是步长的1/8倍到1.125倍之间）或者8-11（对应差分值是步长的-1/8倍到-1.125倍之间）时，</span><br><span class="hljs-comment">也就是这时候差分值的绝对值是小于等于一倍的步长时，也就是说步长可能大了一点点，</span><br><span class="hljs-comment">IndexTable为0xff，index（8位无符号数）加上0xff，必然导致溢出，</span><br><span class="hljs-comment">由二进制的知识可以知道，溢出后得到的值实际上就是index-1,这样使步长略微减小，保持在1倍附近</span><br><span class="hljs-comment">2. code在4-7（对应差分值是步长的1.125倍到1.875倍之间时）或者12-15（对应差分值是步长的-1.125倍到-1.875倍之间时）</span><br><span class="hljs-comment">也就是这时候差分值的绝对值大于一倍步长的时候，也就是说步长可能小了一点点</span><br><span class="hljs-comment">IndexTable是2，4，6，8，这样使index变大，使得下一次的step值扩大</span><br><span class="hljs-comment">这样使下一次的差分值保持在1倍附近</span><br><span class="hljs-comment">这应该就是IndexTable与StepSizeTable构造原理</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ADPCM_Encoder</span><span class="hljs-params">(<span class="hljs-type">int</span> sample)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> code = <span class="hljs-number">0</span>;<br>   <br>    <span class="hljs-type">int</span> predSample = prevSample.sample; <span class="hljs-comment">// 获取之前的采样数据，16bit</span><br>    <span class="hljs-type">int</span> index = prevSample.index;       <span class="hljs-comment">// 获取之前的index值，8bit无符号整数</span><br><br>    <span class="hljs-type">int</span> step = StepSizeTable[index]; <span class="hljs-comment">// 获取步长</span><br><br>    <span class="hljs-type">int</span> diff = sample - prevSample.sample; <span class="hljs-comment">// 获取当前样本值和上一个样本值的差分数值</span><br><br>    <span class="hljs-keyword">if</span> (diff &gt; <span class="hljs-number">0</span>) <span class="hljs-comment">// 差分大于0，则code符号位不需要改变</span><br>        code = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-comment">// 差分值小于0，code修改符号位，也就是和2进制的(100)进行或运算，也就是和10进制的(8)进行或运算</span><br>    &#123;<br>        code |= <span class="hljs-number">8</span>;    <span class="hljs-comment">// 改变符号位</span><br>        diff = -diff; <span class="hljs-comment">// diff变成正的</span><br>    &#125;<br><br>    <span class="hljs-type">int</span> tempstep = step;<br><br>    <span class="hljs-keyword">if</span> (diff &gt;= tempstep) <span class="hljs-comment">// diff大于1倍步长的话</span><br>    &#123;<br>        diff -= tempstep; <span class="hljs-comment">// 减去步长，获取剩余的差分值</span><br>        code |= <span class="hljs-number">4</span>;        <span class="hljs-comment">// 修改第二位为1</span><br>    &#125;<br>    tempstep &gt;&gt;= <span class="hljs-number">1</span>; <span class="hljs-comment">// 步长变为原来的一半</span><br><br>    <span class="hljs-keyword">if</span> (diff &gt;= tempstep) <span class="hljs-comment">// diff仍大于0.5倍步长的话</span><br>    &#123;<br>        diff -= tempstep; <span class="hljs-comment">// 减去步长，获取剩余的差分值</span><br>        code |= <span class="hljs-number">2</span>;        <span class="hljs-comment">// 修改第二位为1</span><br>    &#125;<br>    tempstep &gt;&gt;= <span class="hljs-number">1</span>; <span class="hljs-comment">// 步长变为原来的一半</span><br><br>    <span class="hljs-keyword">if</span> (diff &gt;= tempstep) <span class="hljs-comment">// diff仍大于0.25倍步长的话</span><br>    &#123;<br>        diff -= tempstep; <span class="hljs-comment">// 减去步长，获取剩余的差分值</span><br>        code |= <span class="hljs-number">1</span>;        <span class="hljs-comment">// 修改第一位为1</span><br>    &#125;<br><br>    <span class="hljs-type">int</span> diffq = step &gt;&gt; <span class="hljs-number">3</span>; <span class="hljs-comment">// 量化差分值，默认有1/8的步长</span><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">4</span>)          <span class="hljs-comment">// 如果差分值大于步长的一倍，量化差分值加上步长的1倍</span><br>    &#123;<br>        diffq += step;<br>    &#125;<br>   <br>    step &gt;&gt;= <span class="hljs-number">1</span>;   <span class="hljs-comment">// 步长变为原来的一半</span><br>   <br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">2</span>) <span class="hljs-comment">// 如果差分值大于步长的0.5倍，量化差分值加上步长的0.5倍</span><br>    &#123;<br>        diffq += step;<br>    &#125;<br>    step &gt;&gt;= <span class="hljs-number">1</span>;   <span class="hljs-comment">// 步长变为原来的一半</span><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">1</span>) <span class="hljs-comment">// 如果差分值大于步长的0.25倍，量化差分值加上步长的0.25倍</span><br>    &#123;<br>        diffq += step;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">8</span>) <span class="hljs-comment">// 符号位是1，说明量化差分值是负的，预测值也就减去diffq</span><br>        predSample -= diffq;<br>    <span class="hljs-keyword">else</span> <span class="hljs-comment">// 符号位是0，说明量化差分值是正的，预测值也就加上diffq</span><br>        predSample += diffq;<br><br>    <span class="hljs-comment">// 处理数据溢出</span><br>    <span class="hljs-keyword">if</span> (predSample &gt; <span class="hljs-number">32767</span>)<br>        predSample = <span class="hljs-number">32767</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (predSample &lt; <span class="hljs-number">-32767</span>)<br>        predSample = <span class="hljs-number">-32767</span>;<br><br>    index += IndexTable[code];<br>    <span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span>)<br>        index = <span class="hljs-number">0</span>;<br>    index &amp;= <span class="hljs-number">0xff</span>; <span class="hljs-comment">// 舍弃高位溢出，本质是因为我定义了index是32位整数，手动&amp;0xff，舍弃高位数字</span><br>    <span class="hljs-keyword">if</span> (index &gt; <span class="hljs-number">88</span>)<br>        index = <span class="hljs-number">88</span>;<br><br>    <span class="hljs-comment">// 此为数据已经decode完毕，更新prevSample</span><br>    prevSample.sample = predSample;<br>    prevSample.index = index;<br><br>    <span class="hljs-keyword">return</span> (code &amp; <span class="hljs-number">0x0f</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ADPCM_Decoder</span><span class="hljs-params">(<span class="hljs-type">int</span> code)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> predSample = prevSample.sample; <span class="hljs-comment">// 获取之前的采样值</span><br>    <span class="hljs-type">int</span> index = prevSample.index;       <span class="hljs-comment">// 获取之前的index值</span><br><br>    <span class="hljs-type">int</span> step = StepSizeTable[index]; <span class="hljs-comment">// 获取步长</span><br><br>    <span class="hljs-type">int</span> diffq = step &gt;&gt; <span class="hljs-number">3</span>; <span class="hljs-comment">// 量化差分值带有默认的1/8步长</span><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">4</span>)          <span class="hljs-comment">// 如果code的二进制的第二位是1，也就是code&amp;4是1，说明量化差分值是大于一倍步长</span><br>        diffq += step;     <span class="hljs-comment">// 加上步长</span><br>    step &gt;&gt;= <span class="hljs-number">1</span>;            <span class="hljs-comment">// 步长减半</span><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">2</span>)          <span class="hljs-comment">// 如果code的二进制的第三位是1，也就是code&amp;2是1，说明量化差分值是大于0.5倍步长</span><br>        diffq += step;     <span class="hljs-comment">// 加上步长</span><br>    step &gt;&gt;= <span class="hljs-number">1</span>;            <span class="hljs-comment">// 步长减半</span><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">1</span>)          <span class="hljs-comment">// 如果code的二进制的第四位是1，也就是code&amp;1是1，说明量化差分值是大于0.25倍步长</span><br>        diffq += step;     <span class="hljs-comment">// 加上步长</span><br><br>    <span class="hljs-keyword">if</span> (code &amp; <span class="hljs-number">8</span>)            <span class="hljs-comment">// 如果符号位是1，说明量化差分值是负数</span><br>        predSample -= diffq; <span class="hljs-comment">// 减去量化差分值</span><br>    <span class="hljs-keyword">else</span>                     <span class="hljs-comment">// 否则</span><br>        predSample += diffq; <span class="hljs-comment">// 加上量化差分值</span><br>   <br>    <span class="hljs-comment">// 处理数据溢出</span><br>    <span class="hljs-keyword">if</span> (predSample &gt; <span class="hljs-number">32767</span>)<br>        predSample = <span class="hljs-number">32767</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (predSample &lt; <span class="hljs-number">-32767</span>)<br>        predSample = <span class="hljs-number">-32767</span>;<br><br>    index += IndexTable[code];<br><br>    <span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span>)<br>        index = <span class="hljs-number">0</span>;<br>    index &amp;= <span class="hljs-number">0xff</span>;<br>    <span class="hljs-keyword">if</span> (index &gt; <span class="hljs-number">88</span>)<br>        index = <span class="hljs-number">88</span>;<br><br>    <span class="hljs-comment">// 此为数据已经encode完毕，更新prevSample</span><br>    prevSample.sample = predSample;<br>    prevSample.index = index;<br><br>    <span class="hljs-keyword">return</span> predSample;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> sample[<span class="hljs-number">16</span>] = &#123;<span class="hljs-number">0x0010</span>,<br>                      <span class="hljs-number">0x0020</span>,<br>                      <span class="hljs-number">0x0030</span>,<br>                      <span class="hljs-number">0x0040</span>,<br>                      <span class="hljs-number">0x0050</span>,<br>                      <span class="hljs-number">0x0050</span>,<br>                      <span class="hljs-number">0x0050</span>,<br>                      <span class="hljs-number">0x0040</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>,<br>                      <span class="hljs-number">0x0400</span>&#125;;<br>    <span class="hljs-type">int</span> EncodeSample[<span class="hljs-number">16</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>    &#123;<br>        EncodeSample[i] = <span class="hljs-built_in">ADPCM_Encoder</span>(sample[i]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;, code:%d\n&quot;</span>, EncodeSample[i]);<br>    &#125;<br>    prevSample = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> DecodeSample[<span class="hljs-number">16</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>    &#123;<br>        DecodeSample[i] = <span class="hljs-built_in">ADPCM_Decoder</span>(EncodeSample[i]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x &quot;</span>, DecodeSample[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法学习</tag>
      
      <tag>ADPCM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/23/hello-world/"/>
    <url>/2023/05/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
